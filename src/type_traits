/*	Copyright (C) 2005 Garrett A. Kajmowicz

	This file is part of the uClibc++ Library.
	This library is free software; you can redistribute it and/or
	modify it under the terms of the GNU Lesser General Public
	License as published by the Free Software Foundation; either
	version 2.1 of the License, or (at your option) any later version.

	This library is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
	Lesser General Public License for more details.

	You should have received a copy of the GNU Lesser General Public
	License along with this library; if not, write to the Free Software
	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*/

#include "basic_definitions"
#include <string.h>
#include "exception"
#include "memory"
#include "char_traits"

#ifndef __HEADER_TYPE_TRAITS
#define __HEADER_TYPE_TRAITS 1

#pragma GCC visibility push(default)

namespace std{
  template<typename _Tp, _Tp __v>
    struct integral_constant
    {
      static constexpr _Tp                  value = __v;
      typedef _Tp                           value_type;
      typedef integral_constant<_Tp, __v>   type;
      constexpr operator value_type() const { return value; }
    };

  template<typename _Tp, _Tp __v>
    constexpr _Tp integral_constant<_Tp, __v>::value;

  typedef integral_constant<bool, true>     true_type;

  typedef integral_constant<bool, false>    false_type;

	template <class I>
    class _UCXXEXPORT __is_integral_helper
    : public false_type { };

	template <>
    class _UCXXEXPORT __is_integral_helper <unsigned int>
    : public true_type { };

	template <>
    class _UCXXEXPORT __is_integral_helper <signed int>
    : public true_type { };

	template <>
    class _UCXXEXPORT __is_integral_helper <short unsigned int>
    : public true_type { };

	template <>
    class _UCXXEXPORT __is_integral_helper <short signed int>
    : public true_type { };

	template <>
    class _UCXXEXPORT __is_integral_helper <char>
    : public true_type { };

	template <>
    class _UCXXEXPORT __is_integral_helper <signed char>
    : public true_type { };

	template <>
    class _UCXXEXPORT __is_integral_helper <unsigned char>
    : public true_type { };

	template <>
    class _UCXXEXPORT __is_integral_helper <long unsigned int>
    : public true_type { };

	template <>
    class _UCXXEXPORT __is_integral_helper <long signed int>
    : public true_type { };

  template<typename _Tp>
    struct is_integral
    : public __is_integral_helper<_Tp>::type
    { };

}

#pragma GCC visibility pop

#endif

